
version: '3.8'

services:
  # Database PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: classeviva-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: classeviva
      POSTGRES_USER: classeviva_user
      POSTGRES_PASSWORD: secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - classeviva_network

  # Backend Node.js API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: classeviva-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://classeviva_user:secure_password_123@postgres:5432/classeviva
      JWT_SECRET: your-super-secret-jwt-key-here-change-this
      PORT: 3001
    depends_on:
      - postgres
    ports:
      - "3001:3001"
    networks:
      - classeviva_network

  # Frontend React (build di produzione)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: classeviva-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - classeviva_network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: classeviva-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - classeviva_network

volumes:
  postgres_data:

networks:
  classeviva_network:
    driver: bridge
